version: '3.8'

services:
  bot:
    container_name: bot
    build:
      context: .
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - migrations
      - redis

  postgres:
    image: postgres:13.1
    container_name: postgres
    env_file:
      - .env
    environment:
      DB_USER: "${DB_USER}"
      DB_PASS: "${DB_PASS}"
      DB_NAME: "${DB_NAME}"
      POSTGRES_PASSWORD: "${DB_PASS}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - "./src/postgres:${POSTGRES_VOLUME_PATH}"

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:6379"

  migrations:
    build:
      context: .
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy

networks:
  default:
    driver: bridge
